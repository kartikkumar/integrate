# Copyright (c) 2018 Kartik Kumar (me@kartikkumar.com)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
   - secure: "wDJM5B4ggfinh8YMt/9Nj4oEes1qiY+0YiVRUGU1Gf0wTzVUAw+ZYad4Fi6jnQJw8Z7ZbxupIZTsy8TDNnh84E/lk9RtCpY0O1irFcAChSQlKpoF9+Yd3+teg3CSh+JnDWgA+gOMBfUIBZS98+KC1UlvypAQBqdmKHpIUlRrjZ9wFls2l+uss6kC9vbPq1UUYoa/17QqALHwuju7Yi/gDUlm++Yuvb8rhvJbGbtj9IE628FPQxSizGflU5j5Juhs5zmOzkag9krruGzAfetm7u7/P0ns3uVp4TZj3Plo2kyjxs7s0b3zE8NY28TzfJcazbtDnu/hWkxrqelUn0kwb+72+ltzzj3DmLYrPi4Qkt78SZSFydSsJuZ4UwAxhdQzprRYw3eQo52OOe0F5B4n8ml2sugNwn2Lplg17sKsUBP+o8/oaIbBRz3IWT439+SM3cShyGoQn12pySVZHG1NJ058AhLetsSNCr3egd/XHJavKYvGia4pFJYdfTe+U/Ys47XyOu1iuIFs2gjVLU9bmstsmQXVHZLbcUnsMgoE/a7GcbhdUV3YbNAa906gOLcD73Hue+0j5Km8DTyMpD19IE8c4FNrR0Xmn+BHnJhm6LH5Bzbmi6ZpM1dhwUTSuqi/MG7PVwa/6KooFyXFP84T4ptH/CjxQc7+3kW7YH7y2DI="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  apt:
    packages:
      - texlive
      - graphviz
      - ghostscript
      - mscgen
  coverity_scan:
    project:
      name: "kartikkumar/integrate"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on"
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      pip install --user cpp-coveralls;
    fi

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
